import "~/styles/globals.css";

import { GeistSans } from "geist/font/sans";
import { type Metadata, type GetServerSideProps } from "next";

import { TRPCReactProvider } from "~/trpc/react";
import Link from "next/link";
import {
  FilmIcon,
  PlayIcon,
  SearchIcon,
  TvIcon,
  UsersIcon,
  VideoIcon,
} from "~/app/_components/icons";
import { Input } from "~/components/ui/input";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "~/components/ui/dropdown-menu";
import { Avatar, AvatarFallback, AvatarImage } from "~/components/ui/avatar";
import { getServerAuthSession } from "~/server/auth";
import { api } from "~/trpc/server";
import { Button } from "~/components/ui/button";
import { PlusIcon } from "@radix-ui/react-icons";
import { HydrateClient } from "~/trpc/server";
import { redirect } from 'next/navigation';


export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

export default async function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  const session = await getServerAuthSession();

  if (!session) {return redirect("/api/auth/signin");}

  const discord_id = await api.user.discord_id();

  return (
    <html lang="en" className={`${GeistSans.variable}`}>
      <body>
        <TRPCReactProvider>
          <HydrateClient>
            <div
              key="1"
              className="grid min-h-screen w-full grid-cols-[240px_1fr] bg-gray-950 dark:bg-gray-950"
            >
              <div className="flex flex-col border-r bg-gray-900 p-6 dark:border-gray-800 dark:bg-gray-900">
                <div className="mb-6 flex items-center gap-2">
                  <PlayIcon className={"h-6 w-6 text-primary"} />
                  <h2 className="text-xl font-bold text-gray-50">
                    Watch Later
                  </h2>
                </div>
                <nav className="flex flex-col gap-2">
                  <Link
                    href="#"
                    className={"flex items-center gap-2 rounded-md px-3 py-2"}
                  >
                    <Button
                      className={
                        "bg-gray-400 text-sm font-medium text-gray-950 transition-colors hover:bg-gray-300 dark:bg-gray-600 dark:text-gray-100 dark:hover:bg-gray-700"
                      }
                    >
                      <PlusIcon className={"mr-2 h-5 w-5"} /> Add new Entry
                    </Button>
                  </Link>
                  <Link
                    className="flex items-center gap-2 rounded-md px-3 py-2 text-sm font-medium text-gray-50 transition-colors hover:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800"
                    href="#"
                    prefetch={false}
                  >
                    <VideoIcon className={"h-5 w-5"} />
                    Movies
                  </Link>
                  <Link
                    className="flex items-center gap-2 rounded-md px-3 py-2 text-sm font-medium text-gray-50 transition-colors hover:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800"
                    href="#"
                    prefetch={false}
                  >
                    <TvIcon className={"h-5 w-5"} />
                    TV Shows
                  </Link>
                  <Link
                    className="flex items-center gap-2 rounded-md px-3 py-2 text-sm font-medium text-gray-50 transition-colors hover:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800"
                    href="#"
                    prefetch={false}
                  >
                    <FilmIcon className={"h-5 w-5"} />
                    Documentaries
                  </Link>
                </nav>
                <div className="mt-auto">
                  <div className="flex items-center gap-2 rounded-md bg-gray-800 px-3 py-2 text-sm font-medium text-gray-50">
                    <TvIcon className={"h-5 w-5"} />
                    <span>Your current channel</span>
                  </div>
                  <div className="mt-2 flex items-center gap-2 rounded-md bg-gray-800 px-3 py-2 text-sm font-medium text-gray-50">
                    <UsersIcon className={"h-5 w-5"} />
                    <span>Users connected</span>
                  </div>
                </div>
              </div>
              <div className="flex flex-col">
                <div className="flex h-16 items-center border-b bg-gray-900 px-6 dark:border-gray-800 dark:bg-gray-900">
                  <div className="flex w-full items-center gap-4">
                    <div className="relative flex-1">
                      <SearchIcon
                        className={
                          "absolute left-2.5 top-2.5 h-4 w-4 text-gray-400 dark:text-gray-400"
                        }
                      />
                      <Input
                        className="w-full bg-gray-800 pl-8 text-gray-50 placeholder:text-gray-400"
                        placeholder="Search videos..."
                        type="search"
                      />
                    </div>
                    <DropdownMenu>
                      <DropdownMenuTrigger asChild>
                        {session?.user && (
                          <Avatar className="h-9 w-9">
                            {session?.user.image &&
                              !(
                                session.user.image ==
                                "https://cdn.discordapp.com/embed/avatars/0.png"
                              ) && (
                                <AvatarImage
                                  src={session.user.image}
                                  alt={"@" + session.user.name}
                                  title={"@" + session.user.name}
                                />
                              )}
                            <AvatarFallback
                              className={"bg-gray-800 text-gray-50"}
                            >
                              {session.user.name?.charAt(0).toUpperCase()}
                            </AvatarFallback>
                            <span className="sr-only">Toggle user menu</span>
                          </Avatar>
                        )}
                      </DropdownMenuTrigger>
                      <DropdownMenuContent>
                        <DropdownMenuItem>
                          {/* @ts-expect-error cant be undefined i think */}
                          My Account - {discord_id[0].providerAccountId}
                        </DropdownMenuItem>
                        <DropdownMenuItem>Settings</DropdownMenuItem>
                        <DropdownMenuSeparator />
                        <Link href={"/api/auth/signout"}><DropdownMenuItem>Logout</DropdownMenuItem></Link>
                      </DropdownMenuContent>
                    </DropdownMenu>
                  </div>
                </div>
                {children}
              </div>
            </div>
          </HydrateClient>
        </TRPCReactProvider>
      </body>
    </html>
  );
}
